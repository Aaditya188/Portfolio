{"version":3,"sources":["assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/Section/index.js","components/Text/index.js","components/Footer/index.js","components/ProjectLayout/index.js","components/Image/index.js","components/Link/index.js","utils/image.js"],"names":["Heading","children","level","as","align","weight","className","rest","clampedLevel","Math","min","max","Component","Helmet","rel","href","GothamBold","crossorigin","classNames","Section","forwardRef","ref","Text","size","secondary","Footer","Date","getFullYear","target","ProjectHeader","title","description","linkLabel","url","roles","style","numToMs","prerender","iconHoverShift","icon","length","map","role","index","initDelay","ProjectContainer","ProjectSection","light","first","fullHeight","backgroundOverlayOpacity","backgroundElement","ProjectBackground","opacity","entered","offset","useParallax","numToPx","alt","ProjectImage","reveal","delay","ProjectSectionContent","width","ProjectSectionHeading","ProjectSectionText","ProjectTextRow","center","stretch","justify","noMargin","centerMobile","ProjectSectionColumns","centered","ImageElements","onLoad","loaded","inViewport","srcSet","placeholder","src","play","prefersReducedMotion","usePrefersReducedMotion","showPlaceholder","setShowPlaceholder","useState","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","useRef","videoRef","isVideo","endsWith","imgSrc","split","showFullRes","useEffect","purgePlaceholder","placeholderElement","current","addEventListener","removeEventListener","async","resolvedVideoSrc","resolveVideoSrcFromSrcSet","resolveVideoSrc","height","pause","togglePlaying","event","preventDefault","paused","handleFocusPlayButton","onMouseOver","undefined","onMouseOut","muted","loop","playsInline","autoPlay","onLoadStart","aria-label","in","onExit","reflow","onExited","timeout","enter","exit","msToNum","tokens","base","durationS","status","visible","onFocus","onBlur","onClick","decoding","aria-hidden","Image","raised","setLoaded","themeId","useTheme","containerRef","useInViewport","useCallback","VALID_EXT","Link","isValidExtension","includes","pop","isAnchor","relValue","targetValue","RouterLink","to","onMouseUp","blurOnMouseUp","getImageFromSrcSet","sizes","Promise","resolve","reject","Error","tempImage","srcset","source","currentSrc","error","sources","srcString","image","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","replace","fakeSrcSet","join","fakeSrc","find"],"mappings":"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","file":"static/js/1.d817c876.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","import Link from 'components/Link';\nimport './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">\n      {`© ${new Date().getFullYear()} Hamish Williams.`}\n    </span>\n    <Link secondary className=\"footer__link\" href=\"/humans.txt\" target=\"_self\">\n      Crafted by yours truly\n    </Link>\n  </footer>\n);\n\nexport default Footer;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport Image from 'components/Image';\nimport { Button } from 'components/Button';\nimport { useParallax } from 'hooks';\nimport prerender from 'utils/prerender';\nimport Section from 'components/Section';\nimport { numToPx, numToMs } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst initDelay = 300;\n\nexport function ProjectHeader({\n  title,\n  description,\n  linkLabel = 'Visit website',\n  url,\n  roles,\n  className,\n}) {\n  return (\n    <Section className={classNames('project__header', className)}>\n      <div\n        className=\"project__header-content\"\n        style={{ '--initDelay': numToMs(initDelay) }}\n      >\n        <div className=\"project__details\">\n          <Heading\n            className={classNames('project__title', {\n              'project__title--entered': !prerender,\n            })}\n            level={2}\n            as=\"h1\"\n          >\n            {title}\n          </Heading>\n          <Text\n            className={classNames('project__description', {\n              'project__description--entered': !prerender,\n            })}\n            size=\"xl\"\n          >\n            {description}\n          </Text>\n          {!!url && (\n            <Button\n              secondary\n              iconHoverShift\n              className={classNames('project__link-button', {\n                'project__link-button--entered': !prerender,\n              })}\n              icon=\"chevronRight\"\n              href={url}\n            >\n              {linkLabel}\n            </Button>\n          )}\n        </div>\n        {!!roles?.length && (\n          <ul className=\"project__meta\">\n            {roles?.map((role, index) => (\n              <li\n                className={classNames('project__meta-item', {\n                  'project__meta-item--entered': !prerender,\n                })}\n                style={{ '--delay': numToMs(initDelay + 300 + index * 140) }}\n                key={role}\n              >\n                <Text secondary as=\"span\">\n                  {role}\n                </Text>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport const ProjectContainer = ({ className, ...rest }) => (\n  <article className={classNames('project', className)} {...rest} />\n);\n\nexport const ProjectSection = forwardRef(\n  (\n    {\n      className,\n      light,\n      first,\n      fullHeight,\n      backgroundOverlayOpacity = 0.9,\n      backgroundElement,\n      children,\n      ...rest\n    },\n    ref\n  ) => (\n    <section\n      className={classNames('project__section', className, {\n        'project__section--light': light,\n        'project__section--full-height': fullHeight,\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {!!backgroundElement && (\n        <div\n          className=\"project__section-background\"\n          style={{ '--opacity': backgroundOverlayOpacity }}\n        >\n          {backgroundElement}\n        </div>\n      )}\n      <Section\n        className={classNames('project__section-inner', {\n          'project__section-inner--first': first,\n        })}\n      >\n        {children}\n      </Section>\n    </section>\n  )\n);\n\nexport const ProjectBackground = ({ opacity = 0.7, className, entered, ...rest }) => {\n  const offset = useParallax(0.6);\n\n  return (\n    <div\n      className={classNames('project__background-image', className, {\n        'project__background-image--entered': entered,\n      })}\n    >\n      <div\n        className=\"project__background-image-element\"\n        style={{\n          '--offset': numToPx(offset),\n        }}\n      >\n        <Image alt=\"\" role=\"presentation\" {...rest} />\n      </div>\n      <div className=\"project__background-scrim\" style={{ '--opacity': opacity }} />\n    </div>\n  );\n};\n\nexport const ProjectImage = ({ className, ...rest }) => (\n  <div className={classNames('project__image', className)}>\n    <Image reveal delay={300} {...rest} />\n  </div>\n);\n\nexport const ProjectSectionContent = ({ className, width = 'l', ...rest }) => (\n  <div\n    className={classNames(\n      'project__section-content',\n      `project__section-content--width-${width}`,\n      className\n    )}\n    {...rest}\n  />\n);\n\nexport const ProjectSectionHeading = ({ className, level = 3, as = 'h2', ...rest }) => (\n  <Heading\n    className={classNames('project__section-heading', className)}\n    as={as}\n    level={level}\n    align=\"auto\"\n    {...rest}\n  />\n);\n\nexport const ProjectSectionText = ({ className, ...rest }) => (\n  <Text className={classNames('project__section-text', className)} size=\"l\" {...rest} />\n);\n\nexport const ProjectTextRow = ({\n  center,\n  stretch,\n  justify = 'center',\n  width = 'm',\n  noMargin,\n  className,\n  centerMobile,\n  ...rest\n}) => (\n  <div\n    className={classNames(\n      'project__text-row',\n      `project__text-row--justify-${justify}`,\n      `project__text-row--width-${width}`,\n      className,\n      {\n        'project__text-row--center': center,\n        'project__text-row--stretch': stretch,\n        'project__text-row--center-mobile': centerMobile,\n        'project__text-row--no-margin': noMargin,\n      }\n    )}\n    {...rest}\n  />\n);\n\nexport const ProjectSectionColumns = ({ className, centered, ...rest }) => (\n  <ProjectSectionContent\n    className={classNames(\n      'project__section-columns',\n      { 'project__section-columns--centered': centered },\n      className\n    )}\n    {...rest}\n  />\n);\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { Link as RouterLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { blurOnMouseUp } from 'utils/focus';\nimport './index.css';\n\n// File extensions that can be linked to\nconst VALID_EXT = ['txt', 'png', 'jpg'];\n\nconst Link = ({ rel, target, children, secondary, className, href, as, ...rest }) => {\n  const isValidExtension = VALID_EXT.includes(href?.split('.').pop());\n  const isAnchor = href?.includes('://') || href?.[0] === '#' || isValidExtension;\n  const relValue = rel || (isAnchor ? 'noreferrer noopener' : undefined);\n  const targetValue = target || (isAnchor ? '_blank' : undefined);\n  const Component = as || (isAnchor ? 'a' : RouterLink);\n\n  return (\n    <Component\n      className={classNames('link', className, { 'link--secondary': secondary })}\n      rel={relValue}\n      href={isAnchor ? href : undefined}\n      to={!isAnchor ? href : undefined}\n      target={targetValue}\n      onMouseUp={blurOnMouseUp}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Link;\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n"],"sourceRoot":""}