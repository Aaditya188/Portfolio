{"version":3,"sources":["assets/arrow-left.svg","assets/arrow-right.svg","components/Carousel/index.js","components/Carousel/carouselShader.js","utils/three.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","SvgArrowLeft","title","titleId","props","svgRef","fill","width","height","viewBox","ref","id","ForwardRef","SvgArrowRight","determineIndex","imageIndex","index","images","direction","Carousel","placeholder","rest","dragging","setDragging","useState","setImageIndex","loaded","setLoaded","showPlaceholder","setShowPlaceholder","textures","setTextures","canvasRect","setCanvasRect","canvas","useRef","imagePlane","geometry","material","scene","camera","renderer","animating","swipeDirection","lastSwipePosition","scheduledAnimationFrame","prefersReducedMotion","usePrefersReducedMotion","inViewport","useInViewport","placeholderRef","springTween","swipeElement","currentImageAlt","alt","useEffect","document","body","style","cursor","cameraOptions","current","WebGLRenderer","antialias","powerPreference","OrthographicCamera","Scene","setPixelRatio","setClearColor","setSize","domElement","background","Color","position","z","cleanScene","cleanRenderer","mounted","async","textureLoader","TextureLoader","anisotropy","capabilities","getMaxAnisotropy","texturePromises","map","imageSrc","getImageFromSrcSet","image","imageTexture","loadAsync","initTexture","encoding","sRGBEncoding","minFilter","LinearFilter","magFilter","generateMipmaps","Promise","all","ShaderMaterial","uniforms","dispFactor","type","value","currentImage","nextImage","vertexShader","fragmentShader","transparent","opacity","PlaneBufferGeometry","Mesh","set","add","requestAnimationFrame","render","loadImages","goToIndex","useCallback","onComplete","springValue","spring","from","get","to","velocity","getVelocity","stiffness","damping","start","navigate","cancelAnimationFrame","finalIndex","onNavClick","handleResize","rect","getBoundingClientRect","window","addEventListener","removeEventListener","animation","animate","stop","purgePlaceholder","placeholderElement","onSwipeMove","x","absoluteX","Math","abs","containerWidth","swipePercentage","nextIndex","displacementClamp","min","max","onSwipeEnd","duration","minSwipeDistance","pointerTracker","swipeXY","y","swipeStart","listen","event","preventDefault","pointer","swipeEnd","className","onKeyDown","selectedAction","ArrowRight","ArrowLeft","classNames","aria-atomic","aria-live","aria-label","role","aria-hidden","prerender","src","onClick","onMouseUp","blurOnMouseUp","aria-pressed","traverse","object","isMesh","dispose","isMaterial","cleanMaterial","keys","forceContextLoss","removeLights","lights","light","parent","remove"],"mappings":"yLAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAIhT,IAAIS,EAAoB,gBAAoB,OAAQ,CAClDC,EAAG,yEAGL,SAASC,GAAa,MACpBC,EAAK,QACLC,KACGC,GACFC,GACD,OAAoB,gBAAoB,MAAOpB,EAAS,CACtDqB,KAAM,eACNC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,IAAKL,EACL,kBAAmBF,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAMH,GAGpB,MAAMa,EAA0B,aAAiBX,GAClC,IC1Bf,SAAS,IAA2Q,OAA9P,EAAWf,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAIhT,IAAI,EAAoB,gBAAoB,OAAQ,CAClDU,EAAG,yEAGL,SAASa,GAAc,MACrBX,EAAK,QACLC,KACGC,GACFC,GACD,OAAoB,gBAAoB,MAAO,EAAS,CACtDC,KAAM,eACNC,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,IAAKL,EACL,kBAAmBF,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAM,GAGpB,MAAM,EAA0B,aAAiBW,GAClC,I,0BCDf,SAASC,EAAeC,EAAYC,EAAOC,EAAQC,GACjD,GAAc,OAAVF,EAAgB,OAAOA,EAC3B,MAAMzB,EAAS0B,EAAO1B,OAItB,OADmB2B,EAAY,GADZH,EAAa,GAAKxB,GADlBwB,EAAa,EAAIxB,GAAUA,EAmZjC4B,UA7YE,EAAGZ,QAAOC,SAAQS,SAAQG,iBAAgBC,MACzD,MAAOC,EAAUC,GAAeC,oBAAS,IAClCT,EAAYU,GAAiBD,mBAAS,IACtCE,EAAQC,GAAaH,oBAAS,IAC9BI,EAAiBC,GAAsBL,oBAAS,IAChDM,EAAUC,GAAeP,sBACzBQ,EAAYC,GAAiBT,qBAC9BU,EAASC,mBACTC,EAAaD,mBACbE,EAAWF,mBACXG,EAAWH,mBACXI,EAAQJ,mBACRK,EAASL,mBACTM,EAAWN,mBACXO,EAAYP,kBAAO,GACnBQ,EAAiBR,mBACjBS,EAAoBT,mBACpBU,EAA0BV,mBAC1BW,EAAuBC,cACvBC,EAAaC,YAAcf,GAAQ,GACnCgB,EAAiBf,mBACjBgB,EAAchB,mBACdiB,EAAejB,mBAEfkB,EAAmB,SAAQtC,EAAa,QAAQE,EAAO1B,WAC3D0B,EAAOF,GAAYuC,MAGrBC,qBAAU,KACJjC,IACFkC,SAASC,KAAKC,MAAMC,OAAS,YAGxB,KACLH,SAASC,KAAKC,MAAMC,OAAS,MAE9B,CAACrC,IAEJiC,qBAAU,KACR,MAAMK,EAAgB,CAACrD,GAAS,EAAGA,EAAQ,EAAGC,EAAS,EAAGA,GAAU,EAAG,EAAG,KAgB1E,OAfAiC,EAASoB,QAAU,IAAIC,KAAc,CACnC5B,OAAQA,EAAO2B,QACfE,WAAW,EACXC,gBAAiB,qBAEnBxB,EAAOqB,QAAU,IAAII,QAAsBL,GAC3CrB,EAAMsB,QAAU,IAAIK,KACpBzB,EAASoB,QAAQM,cAAc,GAC/B1B,EAASoB,QAAQO,cAAc,QAAU,GACzC3B,EAASoB,QAAQQ,QAAQ9D,EAAOC,GAChCiC,EAASoB,QAAQS,WAAWZ,MAAMnD,MAAQ,OAC1CkC,EAASoB,QAAQS,WAAWZ,MAAMlD,OAAS,OAC3C+B,EAAMsB,QAAQU,WAAa,IAAIC,IAAM,SACrChC,EAAOqB,QAAQY,SAASC,EAAI,EAErB,KACLhC,EAAUmB,SAAU,EACpBc,YAAWpC,EAAMsB,SACjBe,YAAcnC,EAASoB,YAExB,CAACrD,EAAQD,IAEZgD,qBAAU,KACR,IAAIsB,GAAU,EAqDd,OAJI7B,IAAetB,GA/CAoD,WACjB,MAAMC,EAAgB,IAAIC,KACpBC,EAAaxC,EAASoB,QAAQqB,aAAaC,mBAE3CC,EAAkBnE,EAAOoE,KAAIP,UACjC,MAAMQ,QAAiBC,YAAmBC,GACpCC,QAAqBV,EAAcW,UAAUJ,GAOnD,aANM7C,EAASoB,QAAQ8B,YAAYF,GACnCA,EAAaG,SAAWC,KACxBJ,EAAaK,UAAYC,IACzBN,EAAaO,UAAYD,IACzBN,EAAaR,WAAaA,EAC1BQ,EAAaQ,iBAAkB,EACxBR,KAGH3D,QAAiBoE,QAAQC,IAAIf,GAG9BP,IAELvC,EAASuB,QAAU,IAAIuC,KAAe,CACpCC,SAAU,CACRC,WAAY,CAAEC,KAAM,IAAKC,MAAO,GAChCtF,UAAW,CAAEqF,KAAM,IAAKC,MAAO,GAC/BC,aAAc,CAAEF,KAAM,IAAKC,MAAO1E,EAAS,IAC3C4E,UAAW,CAAEH,KAAM,IAAKC,MAAO1E,EAAS,KAE1C6E,aC/He,8IDgIfC,eCxHiB,y7BDyHjBC,aAAa,EACbC,QAAS,IAGXzE,EAASwB,QAAU,IAAIkD,KAAoBxG,EAAOC,EAAQ,GAC1D4B,EAAWyB,QAAU,IAAImD,IAAK3E,EAASwB,QAASvB,EAASuB,SACzDzB,EAAWyB,QAAQY,SAASwC,IAAI,EAAG,EAAG,GACtC1E,EAAMsB,QAAQqD,IAAI9E,EAAWyB,SAE7BlC,GAAU,GACVI,EAAYD,GAEZqF,uBAAsB,KACpB1E,EAASoB,QAAQuD,OAAO7E,EAAMsB,QAASrB,EAAOqB,cAKhDwD,GAGK,KACLxC,GAAU,KAEX,CAACrE,EAAQS,EAAQ+B,EAAYtB,EAAQnB,IAExC,MAAM+G,EAAYC,uBAChB,EAAGvG,QAAOE,YAAY,MACpB,IAAKY,EAAU,OACfL,EAAcT,GACd,MAAMqF,EAAW/D,EAASuB,QAAQwC,SAClCA,EAASK,UAAUF,MAAQ1E,EAASd,GACpCqF,EAASnF,UAAUsF,MAAQtF,EAE3B,MAAMsG,EAAa,KACjBnB,EAASI,aAAaD,MAAQ1E,EAASd,GACvCqF,EAASC,WAAWE,MAAQ,EAC5B9D,EAAUmB,SAAU,GAGtB,GAAKf,GAAsD,IAA9BuD,EAASC,WAAWE,MAgB/CgB,IACAL,uBAAsB,KACpB1E,EAASoB,QAAQuD,OAAO7E,EAAMsB,QAASrB,EAAOqB,gBAlBY,CAC5DnB,EAAUmB,SAAU,EAEpB,MAAM4D,EAAcjB,YAAMH,EAASC,WAAWE,OAAOA,IACnDH,EAASC,WAAWE,MAAQA,EACd,IAAVA,GAAagB,OAGnBrE,EAAYU,QAAU6D,YAAO,CAC3BC,KAAMF,EAAYG,MAClBC,GAAI,EACJC,SAAUL,EAAYM,cACtBC,UAAW,IACXC,QAAS,KACRC,MAAMT,MAQb,CAAC3E,EAAsBhB,IAGnBqG,EAAWZ,uBACf,EAAGrG,YAAWF,QAAQ,QAASK,MAC7B,IAAKK,EAAQ,OAEb,GAAIgB,EAAUmB,QAKZ,OAJAuE,qBAAqBvF,EAAwBgB,cAC7ChB,EAAwBgB,QAAUsD,uBAAsB,IACtDgB,EAAS,CAAEjH,YAAWF,WAAUK,OAKpC,MAAMgH,EAAavH,EAAeC,EAAYC,EAAOc,EAAUZ,GAC/DoG,EAAU,CAAEtG,MAAOqH,EAAYnH,UAAWA,KAAcG,MAE1D,CAACiG,EAAWvG,EAAYW,EAAQI,IAG5BwG,EAAaf,uBACjBvG,IACE,GAAIA,IAAUD,EAAY,OAE1BoH,EAAS,CAAEjH,UADOF,EAAQD,EAAa,GAAK,EACtBC,YAExB,CAACD,EAAYoH,IAGf5E,qBAAU,KACR,MAAMgF,EAAe,KACnB,MAAMC,EAAOtG,EAAO2B,QAAQ4E,wBAC5BxG,EAAcuG,IAMhB,OAHAE,OAAOC,iBAAiB,SAAUJ,GAClCA,IAEO,KACLG,OAAOE,oBAAoB,SAAUL,MAEtC,IAEHhF,qBAAU,KACR,IAAIsF,EAEJ,MAAMC,EAAU,KACdD,EAAY1B,sBAAsB2B,GAC9BpG,EAAUmB,SACZpB,EAASoB,QAAQuD,OAAO7E,EAAMsB,QAASrB,EAAOqB,UAMlD,OAFAgF,EAAY1B,sBAAsB2B,GAE3B,KAAO,IAAD,EACXV,qBAAqBS,GACrB,UAAA1F,EAAYU,eAAZ,SAAqBkF,UAEtB,IAEHxF,qBAAU,KACR,GAAInC,EAAa,CACf,MAAM4H,EAAmB,KACvBnH,GAAmB,IAGfoH,EAAqB/F,EAAeW,QAG1C,OAFAoF,EAAmBN,iBAAiB,gBAAiBK,GAE9C,KACDC,GACFA,EAAmBL,oBAAoB,gBAAiBI,OAI7D,CAAC5H,IAEJ,MAAM8H,EAAc3B,uBAClB9C,IACE,GAAI/B,EAAUmB,UAAYvB,EAASuB,UAAY/B,EAAU,OACzD,MAAM,EAAEqH,GAAM1E,EACd7B,EAAkBiB,QAAUsF,EAC5B,MAAMC,EAAYC,KAAKC,IAAIH,GACrBI,EAAiBvH,EAAWzB,MAClCoC,EAAekB,QAAUsF,EAAI,GAAK,EAAI,EACtC,MAAMK,EAAkB,GAAMJ,EAAYG,GAAkBA,GAAmB,EACzEE,EAAY3I,EAAeC,EAAY,KAAME,EAAQ0B,EAAekB,SACpEwC,EAAW/D,EAASuB,QAAQwC,SAC5BqD,EAAoBL,KAAKM,IAAIN,KAAKO,IAAIJ,EAAiB,GAAI,GAEjEnD,EAASI,aAAaD,MAAQ1E,EAASf,GACvCsF,EAASK,UAAUF,MAAQ1E,EAAS2H,GACpCpD,EAASnF,UAAUsF,MAAQ7D,EAAekB,QAErCf,IACHuD,EAASC,WAAWE,MAAQkD,GAG9BvC,uBAAsB,KACpB1E,EAASoB,QAAQuD,OAAO7E,EAAMsB,QAASrB,EAAOqB,cAGlD,CAAC7B,EAAYjB,EAAYE,EAAQ6B,EAAsBhB,IAGnD+H,EAAatC,uBAAY,KAC7B,IAAKjF,EAASuB,QAAS,OACvB,MAAMwC,EAAW/D,EAASuB,QAAQwC,SAC5ByD,EAA6C,KAAjC,EAAIzD,EAASC,WAAWE,OACpC/B,EAAW4E,KAAKC,IAAI1G,EAAkBiB,SACtCkG,EAAsC,GAAnB/H,EAAWzB,MACpCqC,EAAkBiB,QAAU,EAExBnB,EAAUmB,SACG,IAAbY,GAAmBA,IAEnBA,EAAWsF,EACb5B,EAAS,CACP2B,WACA5I,UAAWyB,EAAekB,WAG5BwC,EAASI,aAAaD,MAAQH,EAASK,UAAUF,MACjDH,EAASK,UAAUF,MAAQH,EAASI,aAAaD,MACjDH,EAASC,WAAWE,MAAQ,EAAIH,EAASC,WAAWE,MAEpD2B,EAAS,CACPjH,WAAqC,EAA1ByB,EAAekB,QAC1B7C,MAAOD,QAGV,CAACiB,EAAYjB,EAAYoH,IAE5B5E,qBAAU,KACR,IAAIyG,EAEJ,MAAMC,EAAUzD,YAAM,CAAE2C,EAAG,EAAGe,EAAG,IAAKzF,IACpCyE,EAAYzE,MAGR0F,EAAaC,YAAOhH,EAAaS,QAAS,wBAAwBqE,OACtEmC,IACE9I,GAAY,GACZ8I,EAAMC,iBACNN,EAAiBO,YAAQ,CAAEpB,EAAG,EAAGe,EAAG,IAAKhC,MAAM+B,MAI7CO,EAAWJ,YAAO5G,SAAU,oBAAoB0E,OAAM,KAAO,IAAD,EAChE3G,GAAY,GACZsI,IACc,QAAd,EAAAG,SAAA,SAAgBjB,UAGlB,MAAO,KAAO,IAAD,EACXoB,EAAWpB,OACXyB,EAASzB,OACK,QAAd,EAAAiB,SAAA,SAAgBjB,UAEjB,CAACc,EAAYX,IAehB,OACE,sBAAKuB,UAAU,WAAWC,UAdNL,IACpB,MAKMM,EALU,CACdC,WAAY,IAAMzC,EAAS,CAAEjH,UAAW,IACxC2J,UAAW,IAAM1C,EAAS,CAAEjH,WAAY,KAGXmJ,EAAM5K,KAE/BkL,GACJA,QAKsDtJ,EAAxD,UACE,sBAAKoJ,UAAU,oBAAf,UACE,sBACEA,UAAWK,IAAW,0BAA2B,CAC/C,oCAAqCxJ,IAEvCZ,IAAK0C,EAJP,UAME,qBACE2H,eAAA,EACAN,UAAU,2BACVO,YAAU,SACVC,aAAY5H,EACZ6H,KAAK,MALP,SAOE,wBAAQC,eAAA,EAAYV,UAAU,mBAAmB/J,IAAKwB,MAEvDN,GAAmBR,GAClB,qBACE+J,eAAA,EACAV,UAAWK,IAAW,wBAAyB,CAC7C,iCAAkCM,KAAa1J,GAAUI,IAE3DuJ,IAAKjK,EACLV,IAAKwC,EACLI,IAAI,GACJ4H,KAAK,oBAIX,wBACET,UAAU,0CACVQ,aAAW,iBACXK,QAAS,IAAMnD,EAAS,CAAEjH,WAAY,IACtCqK,UAAWC,IAJb,SAME,cAAC,EAAD,MAEF,wBACEf,UAAU,0CACVQ,aAAW,aACXK,QAAS,IAAMnD,EAAS,CAAEjH,UAAW,IACrCqK,UAAWC,IAJb,SAME,cAAC,EAAD,SAGJ,qBAAKf,UAAU,gBAAf,SACGxJ,EAAOoE,KAAI,CAACG,EAAOxE,IAClB,wBACEyJ,UAAU,uBAEVa,QAAS,IAAMhD,EAAWtH,GAC1BuK,UAAWC,IACXP,aAAa,iBAAgBjK,EAAQ,IACrCyK,eAAczK,IAAUD,GAJnByE,EAAMlC,c,gCEnavB,sGAGO,MAAMqB,EAAapC,IACxBA,EAAMmJ,UAASC,IACb,GAAKA,EAAOC,OAIZ,GAFAD,EAAOtJ,SAASwJ,UAEZF,EAAOrJ,SAASwJ,WAClBC,EAAcJ,EAAOrJ,eAErB,IAAK,MAAMA,KAAYqJ,EAAOrJ,SAC5ByJ,EAAczJ,OASTyJ,EAAgBzJ,IAC3BA,EAASuJ,UAET,IAAK,MAAMpM,KAAOP,OAAO8M,KAAK1J,GAAW,CACvC,MAAMkE,EAAQlE,EAAS7C,GACnB+G,GAA0B,kBAAVA,GAAsB,cAAeA,GACvDA,EAAMqF,YAQCjH,EAAgBnC,IAC3BA,EAASoJ,UACTpJ,EAASwJ,mBACTxJ,EAAW,MAMAyJ,EAAeC,IAC1B,IAAK,MAAMC,KAASD,EAClBC,EAAMC,OAAOC,OAAOF,K","file":"static/js/11.836bdc25.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.03 1.375L16.47.125-.031 20.75l16.5 20.625 1.562-1.25L2.53 20.75z\"\n});\n\nfunction SvgArrowLeft({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    width: 18,\n    height: 42,\n    viewBox: \"0 0 18 42\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref);\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.4ab94177.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M-.03 1.375L1.53.125l16.5 20.625-16.5 20.625-1.562-1.25 15.5-19.375z\"\n});\n\nfunction SvgArrowRight({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    width: 18,\n    height: 42,\n    viewBox: \"0 0 18 42\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref);\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.4d170454.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  WebGLRenderer,\n  LinearFilter,\n  OrthographicCamera,\n  Scene,\n  PlaneBufferGeometry,\n  TextureLoader,\n  ShaderMaterial,\n  Mesh,\n  Color,\n  sRGBEncoding,\n} from 'three';\nimport { spring, value, listen, pointer } from 'popmotion';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport prerender from 'utils/prerender';\nimport { blurOnMouseUp } from 'utils/focus';\nimport { ReactComponent as ArrowLeft } from 'assets/arrow-left.svg';\nimport { ReactComponent as ArrowRight } from 'assets/arrow-right.svg';\nimport { vertex, fragment } from './carouselShader';\nimport { cleanScene, cleanRenderer } from 'utils/three';\nimport { getImageFromSrcSet } from 'utils/image';\nimport './index.css';\n\nfunction determineIndex(imageIndex, index, images, direction) {\n  if (index !== null) return index;\n  const length = images.length;\n  const prevIndex = (imageIndex - 1 + length) % length;\n  const nextIndex = (imageIndex + 1) % length;\n  const finalIndex = direction > 0 ? nextIndex : prevIndex;\n  return finalIndex;\n}\n\nconst Carousel = ({ width, height, images, placeholder, ...rest }) => {\n  const [dragging, setDragging] = useState(false);\n  const [imageIndex, setImageIndex] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [textures, setTextures] = useState();\n  const [canvasRect, setCanvasRect] = useState();\n  const canvas = useRef();\n  const imagePlane = useRef();\n  const geometry = useRef();\n  const material = useRef();\n  const scene = useRef();\n  const camera = useRef();\n  const renderer = useRef();\n  const animating = useRef(false);\n  const swipeDirection = useRef();\n  const lastSwipePosition = useRef();\n  const scheduledAnimationFrame = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const inViewport = useInViewport(canvas, true);\n  const placeholderRef = useRef();\n  const springTween = useRef();\n  const swipeElement = useRef();\n\n  const currentImageAlt = `Slide ${imageIndex + 1} of ${images.length}. ${\n    images[imageIndex].alt\n  }`;\n\n  useEffect(() => {\n    if (dragging) {\n      document.body.style.cursor = 'grabbing';\n    }\n\n    return () => {\n      document.body.style.cursor = '';\n    };\n  }, [dragging]);\n\n  useEffect(() => {\n    const cameraOptions = [width / -2, width / 2, height / 2, height / -2, 1, 1000];\n    renderer.current = new WebGLRenderer({\n      canvas: canvas.current,\n      antialias: false,\n      powerPreference: 'high-performance',\n    });\n    camera.current = new OrthographicCamera(...cameraOptions);\n    scene.current = new Scene();\n    renderer.current.setPixelRatio(2);\n    renderer.current.setClearColor(0x111111, 1.0);\n    renderer.current.setSize(width, height);\n    renderer.current.domElement.style.width = '100%';\n    renderer.current.domElement.style.height = 'auto';\n    scene.current.background = new Color(0x111111);\n    camera.current.position.z = 1;\n\n    return () => {\n      animating.current = false;\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, [height, width]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const loadImages = async () => {\n      const textureLoader = new TextureLoader();\n      const anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n\n      const texturePromises = images.map(async image => {\n        const imageSrc = await getImageFromSrcSet(image);\n        const imageTexture = await textureLoader.loadAsync(imageSrc);\n        await renderer.current.initTexture(imageTexture);\n        imageTexture.encoding = sRGBEncoding;\n        imageTexture.minFilter = LinearFilter;\n        imageTexture.magFilter = LinearFilter;\n        imageTexture.anisotropy = anisotropy;\n        imageTexture.generateMipmaps = false;\n        return imageTexture;\n      });\n\n      const textures = await Promise.all(texturePromises);\n\n      // Cancel if the component has unmounted during async code\n      if (!mounted) return;\n\n      material.current = new ShaderMaterial({\n        uniforms: {\n          dispFactor: { type: 'f', value: 0 },\n          direction: { type: 'f', value: 1 },\n          currentImage: { type: 't', value: textures[0] },\n          nextImage: { type: 't', value: textures[1] },\n        },\n        vertexShader: vertex,\n        fragmentShader: fragment,\n        transparent: false,\n        opacity: 1,\n      });\n\n      geometry.current = new PlaneBufferGeometry(width, height, 1);\n      imagePlane.current = new Mesh(geometry.current, material.current);\n      imagePlane.current.position.set(0, 0, 0);\n      scene.current.add(imagePlane.current);\n\n      setLoaded(true);\n      setTextures(textures);\n\n      requestAnimationFrame(() => {\n        renderer.current.render(scene.current, camera.current);\n      });\n    };\n\n    if (inViewport && !loaded) {\n      loadImages();\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [height, images, inViewport, loaded, width]);\n\n  const goToIndex = useCallback(\n    ({ index, direction = 1 }) => {\n      if (!textures) return;\n      setImageIndex(index);\n      const uniforms = material.current.uniforms;\n      uniforms.nextImage.value = textures[index];\n      uniforms.direction.value = direction;\n\n      const onComplete = () => {\n        uniforms.currentImage.value = textures[index];\n        uniforms.dispFactor.value = 0;\n        animating.current = false;\n      };\n\n      if (!prefersReducedMotion && uniforms.dispFactor.value !== 1) {\n        animating.current = true;\n\n        const springValue = value(uniforms.dispFactor.value, value => {\n          uniforms.dispFactor.value = value;\n          if (value === 1) onComplete();\n        });\n\n        springTween.current = spring({\n          from: springValue.get(),\n          to: 1,\n          velocity: springValue.getVelocity(),\n          stiffness: 100,\n          damping: 20,\n        }).start(springValue);\n      } else {\n        onComplete();\n        requestAnimationFrame(() => {\n          renderer.current.render(scene.current, camera.current);\n        });\n      }\n    },\n    [prefersReducedMotion, textures]\n  );\n\n  const navigate = useCallback(\n    ({ direction, index = null, ...rest }) => {\n      if (!loaded) return;\n\n      if (animating.current) {\n        cancelAnimationFrame(scheduledAnimationFrame.current);\n        scheduledAnimationFrame.current = requestAnimationFrame(() =>\n          navigate({ direction, index, ...rest })\n        );\n        return;\n      }\n\n      const finalIndex = determineIndex(imageIndex, index, textures, direction);\n      goToIndex({ index: finalIndex, direction: direction, ...rest });\n    },\n    [goToIndex, imageIndex, loaded, textures]\n  );\n\n  const onNavClick = useCallback(\n    index => {\n      if (index === imageIndex) return;\n      const direction = index > imageIndex ? 1 : -1;\n      navigate({ direction, index });\n    },\n    [imageIndex, navigate]\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      const rect = canvas.current.getBoundingClientRect();\n      setCanvasRect(rect);\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    let animation;\n\n    const animate = () => {\n      animation = requestAnimationFrame(animate);\n      if (animating.current) {\n        renderer.current.render(scene.current, camera.current);\n      }\n    };\n\n    animation = requestAnimationFrame(animate);\n\n    return () => {\n      cancelAnimationFrame(animation);\n      springTween.current?.stop();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (placeholder) {\n      const purgePlaceholder = () => {\n        setShowPlaceholder(false);\n      };\n\n      const placeholderElement = placeholderRef.current;\n      placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n      return () => {\n        if (placeholderElement) {\n          placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n        }\n      };\n    }\n  }, [placeholder]);\n\n  const onSwipeMove = useCallback(\n    position => {\n      if (animating.current || !material.current || !textures) return;\n      const { x } = position;\n      lastSwipePosition.current = x;\n      const absoluteX = Math.abs(x);\n      const containerWidth = canvasRect.width;\n      swipeDirection.current = x > 0 ? -1 : 1;\n      const swipePercentage = 1 - ((absoluteX - containerWidth) / containerWidth) * -1;\n      const nextIndex = determineIndex(imageIndex, null, images, swipeDirection.current);\n      const uniforms = material.current.uniforms;\n      const displacementClamp = Math.min(Math.max(swipePercentage, 0), 1);\n\n      uniforms.currentImage.value = textures[imageIndex];\n      uniforms.nextImage.value = textures[nextIndex];\n      uniforms.direction.value = swipeDirection.current;\n\n      if (!prefersReducedMotion) {\n        uniforms.dispFactor.value = displacementClamp;\n      }\n\n      requestAnimationFrame(() => {\n        renderer.current.render(scene.current, camera.current);\n      });\n    },\n    [canvasRect, imageIndex, images, prefersReducedMotion, textures]\n  );\n\n  const onSwipeEnd = useCallback(() => {\n    if (!material.current) return;\n    const uniforms = material.current.uniforms;\n    const duration = (1 - uniforms.dispFactor.value) * 1000;\n    const position = Math.abs(lastSwipePosition.current);\n    const minSwipeDistance = canvasRect.width * 0.2;\n    lastSwipePosition.current = 0;\n\n    if (animating.current) return;\n    if (position === 0 || !position) return;\n\n    if (position > minSwipeDistance) {\n      navigate({\n        duration,\n        direction: swipeDirection.current,\n      });\n    } else {\n      uniforms.currentImage.value = uniforms.nextImage.value;\n      uniforms.nextImage.value = uniforms.currentImage.value;\n      uniforms.dispFactor.value = 1 - uniforms.dispFactor.value;\n\n      navigate({\n        direction: swipeDirection.current * -1,\n        index: imageIndex,\n      });\n    }\n  }, [canvasRect, imageIndex, navigate]);\n\n  useEffect(() => {\n    let pointerTracker;\n\n    const swipeXY = value({ x: 0, y: 0 }, position => {\n      onSwipeMove(position);\n    });\n\n    const swipeStart = listen(swipeElement.current, 'mousedown touchstart').start(\n      event => {\n        setDragging(true);\n        event.preventDefault();\n        pointerTracker = pointer({ x: 0, y: 0 }).start(swipeXY);\n      }\n    );\n\n    const swipeEnd = listen(document, 'mouseup touchend').start(() => {\n      setDragging(false);\n      onSwipeEnd();\n      pointerTracker?.stop();\n    });\n\n    return () => {\n      swipeStart.stop();\n      swipeEnd.stop();\n      pointerTracker?.stop();\n    };\n  }, [onSwipeEnd, onSwipeMove]);\n\n  const handleKeyDown = event => {\n    const actions = {\n      ArrowRight: () => navigate({ direction: 1 }),\n      ArrowLeft: () => navigate({ direction: -1 }),\n    };\n\n    const selectedAction = actions[event.key];\n\n    if (!!selectedAction) {\n      selectedAction();\n    }\n  };\n\n  return (\n    <div className=\"carousel\" onKeyDown={handleKeyDown} {...rest}>\n      <div className=\"carousel__content\">\n        <div\n          className={classNames('carousel__image-wrapper', {\n            'carousel__image-wrapper--dragging': dragging,\n          })}\n          ref={swipeElement}\n        >\n          <div\n            aria-atomic\n            className=\"carousel__canvas-wrapper\"\n            aria-live=\"polite\"\n            aria-label={currentImageAlt}\n            role=\"img\"\n          >\n            <canvas aria-hidden className=\"carousel__canvas\" ref={canvas} />\n          </div>\n          {showPlaceholder && placeholder && (\n            <img\n              aria-hidden\n              className={classNames('carousel__placeholder', {\n                'carousel__placeholder--loaded': !prerender && loaded && textures,\n              })}\n              src={placeholder}\n              ref={placeholderRef}\n              alt=\"\"\n              role=\"presentation\"\n            />\n          )}\n        </div>\n        <button\n          className=\"carousel__button carousel__button--prev\"\n          aria-label=\"Previous slide\"\n          onClick={() => navigate({ direction: -1 })}\n          onMouseUp={blurOnMouseUp}\n        >\n          <ArrowLeft />\n        </button>\n        <button\n          className=\"carousel__button carousel__button--next\"\n          aria-label=\"Next slide\"\n          onClick={() => navigate({ direction: 1 })}\n          onMouseUp={blurOnMouseUp}\n        >\n          <ArrowRight />\n        </button>\n      </div>\n      <div className=\"carousel__nav\">\n        {images.map((image, index) => (\n          <button\n            className=\"carousel__nav-button\"\n            key={image.alt}\n            onClick={() => onNavClick(index)}\n            onMouseUp={blurOnMouseUp}\n            aria-label={`Jump to slide ${index + 1}`}\n            aria-pressed={index === imageIndex}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","export const vertex = `\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  }\n`;\n\nexport const fragment = `\n  varying vec2 vUv;\n  uniform sampler2D currentImage;\n  uniform sampler2D nextImage;\n  uniform float dispFactor;\n  uniform float direction;\n\n  void main() {\n    vec2 uv = vUv;\n    vec4 _currentImage;\n    vec4 _nextImage;\n    float intensity = 0.6;\n\n    vec4 orig1 = texture2D(currentImage, uv);\n    vec4 orig2 = texture2D(nextImage, uv);\n\n    vec2 distortedPosition = vec2(\n      uv.x + direction * (dispFactor * (orig2.r * intensity)),\n      uv.y + direction * (dispFactor * (orig2 * intensity))\n    );\n\n    vec2 distortedPosition2 = vec2(\n      uv.x - direction * ((1.0 - dispFactor) * (orig1.r * intensity)),\n      uv.y - direction * ((1.0 - dispFactor) * (orig1 * intensity))\n    );\n\n    _currentImage = texture2D(currentImage, distortedPosition);\n    _nextImage = texture2D(nextImage, distortedPosition2);\n\n    vec4 finalTexture = mix(_currentImage, _nextImage, dispFactor);\n    gl_FragColor = finalTexture;\n  }\n`;\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n  scene.traverse(object => {\n    if (!object.isMesh) return;\n\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      for (const material of object.material) {\n        cleanMaterial(material);\n      }\n    }\n  });\n};\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n  material.dispose();\n\n  for (const key of Object.keys(material)) {\n    const value = material[key];\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n  for (const light of lights) {\n    light.parent.remove(light);\n  }\n};\n"],"sourceRoot":""}