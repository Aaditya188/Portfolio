{"version":3,"sources":["assets/arrow-down.svg","pages/Home/Intro.js","pages/Home/index.js","assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/DecoderText/index.js","components/Section/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","strokeWidth","fill","SvgArrowDown","title","titleId","props","svgRef","stroke","width","height","viewBox","ref","id","ForwardRef","DisplacementSphere","lazy","Intro","sectionRef","disciplines","scrollIndicatorHidden","rest","theme","useTheme","disciplineIndex","setDisciplineIndex","useState","windowSize","useWindowSize","prevTheme","usePrevious","introLabel","slice","join","currentDisciplines","filter","item","index","useInterval","themeId","useEffect","Section","className","as","aria-labelledby","tabIndex","Transition","appear","prerender","in","timeout","onEnter","reflow","status","fallback","classNames","DecoderText","text","start","delay","Heading","level","VisuallyHidden","aria-hidden","style","tokens","base","durationXS","TransitionGroup","component","map","enter","exit","wordStatus","durationL","media","tablet","Home","useRouteTransition","hash","state","useLocation","initHash","useRef","intro","projectOne","details","prefersReducedMotion","usePrefersReducedMotion","hasEntered","supportsNativeSmoothScroll","document","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","replace","element","current","behavior","top","offsetTop","IntersectionObserver","entries","observer","entry","isIntersecting","setTimeout","focus","unobserve","rootMargin","observe","window","left","scrollTo","disconnect","Helmet","name","content","children","align","weight","clampedLevel","Math","min","max","Component","rel","href","GothamBold","crossorigin","glyphs","CharType","startDelay","output","type","value","container","reduceMotion","containerInstance","split","animation","renderOutput","characterMap","innerHTML","springValue","position","rand","floor","random","shuffle","chain","spring","from","to","stiffness","damping","stop","memo","forwardRef"],"mappings":"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","file":"static/js/7.13d0acdc.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 1l20.5 12L42 1\",\n  strokeWidth: 2,\n  fill: \"none\"\n});\n\nfunction SvgArrowDown({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    width: 43,\n    height: 15,\n    viewBox: \"0 0 43 15\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref);\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrow-down.fa92c5d4.svg\";\nexport { ForwardRef as ReactComponent };","import { Suspense, lazy, useEffect, useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport { useInterval, usePrevious, useWindowSize } from 'hooks';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { media } from 'utils/style';\nimport { ReactComponent as ArrowDown } from 'assets/arrow-down.svg';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport Heading from 'components/Heading';\nimport Section from 'components/Section';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './Intro.css';\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n  const theme = useTheme();\n  const [disciplineIndex, setDisciplineIndex] = useState(0);\n  const windowSize = useWindowSize();\n  const prevTheme = usePrevious(theme);\n  const introLabel = [disciplines.slice(0, -1).join(', '), disciplines.slice(-1)[0]].join(\n    ', and '\n  );\n  const currentDisciplines = disciplines.filter(\n    (item, index) => index === disciplineIndex\n  );\n  const titleId = `${id}-title`;\n\n  useInterval(\n    () => {\n      const index = (disciplineIndex + 1) % disciplines.length;\n      setDisciplineIndex(index);\n    },\n    5000,\n    theme.themeId\n  );\n\n  useEffect(() => {\n    if (prevTheme && prevTheme.themeId !== theme.themeId) {\n      setDisciplineIndex(0);\n    }\n  }, [theme.themeId, prevTheme]);\n\n  return (\n    <Section\n      className=\"intro\"\n      as=\"section\"\n      ref={sectionRef}\n      id={id}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n      {...rest}\n    >\n      <Transition\n        key={theme.themeId}\n        appear={!prerender}\n        in={!prerender}\n        timeout={3000}\n        onEnter={reflow}\n      >\n        {status => (\n          <Fragment>\n            {!prerender && (\n              <Suspense fallback={null}>\n                <DisplacementSphere />\n              </Suspense>\n            )}\n            <header className=\"intro__text\">\n              <h1\n                className={classNames('intro__name', `intro__name--${status}`)}\n                id={titleId}\n              >\n                <DecoderText text=\"Aaditya Prakash\" start={!prerender} delay={300} />\n              </h1>\n              <Heading level={0} as=\"h2\" className=\"intro__title\">\n                <VisuallyHidden className=\"intro__title-label\">{`Designer + ${introLabel}`}</VisuallyHidden>\n                <span\n                  aria-hidden\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                >\n                  <span\n                    className={classNames(\n                      'intro__title-word',\n                      `intro__title-word--${status}`\n                    )}\n                    style={{ '--delay': tokens.base.durationXS }}\n                  >\n                    Designer\n                  </span>\n                  <span\n                    className={classNames(\n                      'intro__title-line',\n                      `intro__title-line--${status}`\n                    )}\n                  />\n                </span>\n                <TransitionGroup\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                  component=\"span\"\n                >\n                  {currentDisciplines.map(item => (\n                    <Transition\n                      appear\n                      timeout={{ enter: 3000, exit: 2000 }}\n                      key={item}\n                      onEnter={reflow}\n                    >\n                      {wordStatus => (\n                        <span\n                          aria-hidden\n                          className={classNames(\n                            'intro__title-word',\n                            'intro__title-word--plus',\n                            `intro__title-word--${wordStatus}`\n                          )}\n                          style={{ '--delay': tokens.base.durationL }}\n                        >\n                          {item}\n                        </span>\n                      )}\n                    </Transition>\n                  ))}\n                </TransitionGroup>\n              </Heading>\n            </header>\n            {windowSize.width > media.tablet && (\n              <div\n                className={classNames(\n                  'intro__scroll-indicator',\n                  `intro__scroll-indicator--${status}`,\n                  { 'intro__scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n                status={status}\n              />\n            )}\n            {windowSize.width <= media.tablet && (\n              <div\n                className={classNames(\n                  'intro__mobile-scroll-indicator',\n                  `intro__mobile-scroll-indicator--${status}`,\n                  { 'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n              >\n                <ArrowDown aria-hidden />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Transition>\n    </Section>\n  );\n}\n\nexport default Intro;\n","import { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Intro from 'pages/Home/Intro';\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks';\nimport { useLocation } from 'react-router-dom';\nimport './index.css';\n\nconst disciplines = ['Web Developer', 'Freelancer', 'Video Editor', 'UI/UX Designer'];\n\nconst Home = () => {\n  const { status } = useRouteTransition();\n  const { hash, state } = useLocation();\n  const initHash = useRef(true);\n  const [scrollIndicatorHidden] = useState(false);\n  const intro = useRef();\n  const projectOne = useRef();\n  const details = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const hasEntered = status === 'entered';\n    const supportsNativeSmoothScroll = 'scrollBehavior' in document.documentElement.style;\n    let scrollObserver;\n    let scrollTimeout;\n\n    const handleHashchange = (hash, scroll) => {\n      clearTimeout(scrollTimeout);\n      const hashSections = [intro, projectOne, details];\n      const hashString = hash.replace('#', '');\n      const element = hashSections.filter(item => item.current.id === hashString)[0];\n      if (!element) return;\n      const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant';\n      const top = element.current.offsetTop;\n\n      scrollObserver = new IntersectionObserver(\n        (entries, observer) => {\n          const [entry] = entries;\n          if (entry.isIntersecting) {\n            scrollTimeout = setTimeout(\n              () => {\n                element.current.focus();\n              },\n              prefersReducedMotion ? 0 : 400\n            );\n            observer.unobserve(entry.target);\n          }\n        },\n        { rootMargin: '-20% 0px -20% 0px' }\n      );\n\n      scrollObserver.observe(element.current);\n\n      if (supportsNativeSmoothScroll) {\n        window.scroll({\n          top,\n          left: 0,\n          behavior,\n        });\n      } else {\n        window.scrollTo(0, top);\n      }\n    };\n\n    if (hash && initHash.current && hasEntered) {\n      handleHashchange(hash, false);\n      initHash.current = false;\n    } else if (!hash && initHash.current && hasEntered) {\n      window.scrollTo(0, 0);\n      initHash.current = false;\n    } else if (hasEntered) {\n      handleHashchange(hash, true);\n    }\n\n    return () => {\n      clearTimeout(scrollTimeout);\n      if (scrollObserver) {\n        scrollObserver.disconnect();\n      }\n    };\n  }, [hash, state, prefersReducedMotion, status]);\n\n  return (\n    <div className=\"home\">\n      <Helmet>\n        <title>Aaditya Prakash | Portfolio</title>\n        <meta\n          name=\"description\"\n          content=\"Portfolio of Aaditya Prakash – a digital designer working on web with a focus on motion and user experience design.\"\n        />\n      </Helmet>\n      <Intro\n        id=\"intro\"\n        sectionRef={intro}\n        disciplines={disciplines}\n        scrollIndicatorHidden={scrollIndicatorHidden}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport './index.css';\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphs.length);\n      return { type: CharType.Glyph, value: glyphs[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n"],"sourceRoot":""}